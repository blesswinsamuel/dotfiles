version: 3

tasks:
  _decrypt-config:
    cmds:
      - bash -c '(cd secrets && nix run github:ryantm/agenix -- -d config.json.age) > config.json' && git add config.json
    internal: true

  print-config:
    cmds:
      - cd secrets && nix run github:ryantm/agenix -- -d config.json.age

  edit-config:
    cmds:
      - cd secrets && nix run github:ryantm/agenix -- -e config.json.age

  darwin-init:
    cmds:
      - task: _decrypt-config
      - defer: git rm -f config.json
      - nix run nix-darwin -- switch --flake ~/dotfiles {{ .CLI_ARGS }}
      - chsh -s /run/current-system/sw/bin/fish

  switch:
    cmds:
      - task: _decrypt-config
      - defer: git rm -f config.json
      - |
        {{- if eq .MACHINE "Mac" }}
        darwin-rebuild switch --flake ~/dotfiles {{ .CLI_ARGS }}
        {{- else if eq .MACHINE "Linux" }}
        sudo nixos-rebuild switch --flake ~/dotfiles {{ .CLI_ARGS }}
        {{- else }}
        echo "Unsupported OS"
        {{- end }}
    vars:
      MACHINE:
        sh: |
          unameOut="$(uname -s)"
          case "${unameOut}" in
              Linux*)     machine=Linux;;
              Darwin*)    machine=Mac;;
              CYGWIN*)    machine=Cygwin;;
              MINGW*)     machine=MinGw;;
              MSYS_NT*)   machine=Git;;
              *)          machine="UNKNOWN:${unameOut}"
          esac
          echo ${machine}

  # nixos vscode remote target - https://github.com/microsoft/vscode-remote-release/issues/103#issuecomment-1060907227, https://github.com/microsoft/vscode-remote-release/issues/648#issuecomment-503148523
  switch-nixos-remote:
    cmds:
      - task: _decrypt-config
      - defer: git rm -f config.json
      - nixos-rebuild --use-remote-sudo --fast --build-host blesswinsamuel@homelab-hp-chromebox-wifi --target-host blesswinsamuel@homelab-hp-chromebox-wifi switch --flake ~/dotfiles#hp-chromebox {{ .CLI_ARGS }}

  maintanence:
    cmds:
      - brew update
      - brew upgrade
      - brew cleanup
      - nix flake update
      - nix store gc
      - docker system prune -f -a --volumes || true
