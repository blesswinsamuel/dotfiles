version: 3

vars:
  OP_SSH_KEY_REF: '{{ env "OP_SSH_KEY_REF" | default "op://Private/Personal SSH Key/private key" }}'

tasks:
  print-config:
    cmds:
      - age -d -i <(op read "{{ .OP_SSH_KEY_REF }}") ./config.yaml.age

  edit-config:
    cmds:
      - age -d -i <(op read "{{ .OP_SSH_KEY_REF }}") ./config.yaml.age > /tmp/config.yaml.orig
      - defer: rm /tmp/config.yaml.orig
      - cp /tmp/config.yaml.orig /tmp/config.yaml
      - defer: rm /tmp/config.yaml
      - $EDITOR /tmp/config.yaml
      - |
        if ! cmp -s /tmp/config.yaml.orig /tmp/config.yaml; then
          echo "Updating config.yaml.age"
          curl -s https://github.com/blesswinsamuel.keys | age -R - /tmp/config.yaml > ./config.yaml.age
        fi

  darwin-init:
    cmds:
      - nix run nix-darwin -- switch --flake ~/dotfiles {{ .CLI_ARGS }}
      - chsh -s /run/current-system/sw/bin/fish

  init:
    cmds:
      - |
        {{- if eq .MACHINE "Mac" }}
        nix run nix-darwin -- switch --flake ~/dotfiles {{ .CLI_ARGS }}
        {{- else if eq .MACHINE "Linux" }}
        nix run nixpkgs#nixos-rebuild -- switch --flake ~/dotfiles {{ .CLI_ARGS }}
        {{- else }}
        echo "Unsupported OS"
        {{- end }}
      - chsh -s /run/current-system/sw/bin/fish

  run-home:
    cmds:
      - go run . -private-key-file <(op read "{{ .OP_SSH_KEY_REF }}")

  switch:
    cmds:
      - |
        {{- if eq .MACHINE "Mac" }}
        darwin-rebuild switch --flake ~/dotfiles {{ .CLI_ARGS }}
        {{- else if eq .MACHINE "Linux" }}
        sudo nixos-rebuild switch --flake ~/dotfiles {{ .CLI_ARGS }}
        {{- else }}
        echo "Unsupported OS"
        {{- end }}
      - task: run-home
    vars:
      MACHINE:
        sh: |
          unameOut="$(uname -s)"
          case "${unameOut}" in
              Linux*)     machine=Linux;;
              Darwin*)    machine=Mac;;
              CYGWIN*)    machine=Cygwin;;
              MINGW*)     machine=MinGw;;
              MSYS_NT*)   machine=Git;;
              *)          machine="UNKNOWN:${unameOut}"
          esac
          echo ${machine}

  # nixos vscode remote target - https://github.com/microsoft/vscode-remote-release/issues/103#issuecomment-1060907227, https://github.com/microsoft/vscode-remote-release/issues/648#issuecomment-503148523
  switch-nixos-remote:
    cmds:
      - nixos-rebuild --use-remote-sudo --fast --build-host blesswinsamuel@homelab-hp-chromebox-wifi --target-host blesswinsamuel@homelab-hp-chromebox-wifi switch --flake ~/dotfiles#hp-chromebox {{ .CLI_ARGS }}

  maintanence:
    cmds:
      - brew update
      - brew upgrade
      - brew cleanup
      - nix flake update
      - nix store gc
      # - nix-collect-garbage -d
      - docker system prune -f -a --volumes || true
